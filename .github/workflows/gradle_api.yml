# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    paths:
      - "modul-api/**"
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  push_to_registry:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      run: ./gradlew clean :modul-api:buildNeeded -Dspring.profiles.active=blue --stacktrace --info --refresh-dependencies -x test
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to NCP Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
        username: ${{ secrets.NCP_ACCESS_KEY }}
        password: ${{ secrets.NCP_SECRET_KEY }}
    - name: blue build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./modul-api/Dockerfile
        push: true
        tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/blue:latest
        cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/blue:latest
        cache-to: type=inline
        
    - name: Build with Maven
      run: ./gradlew clean :modul-api:buildNeeded -Dspring.profiles.active=green --stacktrace --info --refresh-dependencies -x test

    - name: green build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./modul-api/Dockerfile
        push: true
        tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/green:latest
        cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/green:latest
        cache-to: type=inline

  pull_from_registry:
    name: Connect server ssh and pull from container registry
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/blue
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/green
            ./deploy.sh
            
      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'
      - name: connect ssh2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT2 }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/blue
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/green
            ./deploy.sh    
      
